#!/usr/bin/env nextflow
//Define input channel

input_vcf = Channel.fromPath(params.input_data)


//Process 1: This takes the .vcf and extracts the insertions 

process Get_Insertions {
	tag "Step 1: Processing file: ${input_files}"
	
	memory '16 GB'	
	
	input:
	file input_files from input_vcf
		

	output:
	file("*") into output_data
	
	"""
	chmod +x /stornext/Bioinf/data/lab_davidson/robson.b/Project/Pipeline/AutomatedITD/2_Get_INS_edit.sh 
	/stornext/Bioinf/data/lab_davidson/robson.b/Project/Pipeline/AutomatedITD/2_Get_INSDEL.sh  $input_files output/
	"""

} 
//Process 2: This takes the insertions and runs VEP
process Run_VEP_Analysis {
	tag "Step 2: Modifying file: ${MINTIE_Insertion_file}"
	
	memory '16 GB'
		
	input:
	file MINTIE_Insertion_file from output_data
	
	output:
	file("*") into modified_data

	
	
	"""
	
	module load ensembl-vep/98.3
	
	vep --offline --cache --cache_version 109 --no_check_variants_order --dir_cache /stornext/Bioinf/data/lab_davidson/robson.b/Project/Pipeline/AutomatedITD -i "${MINTIE_Insertion_file}" -o "${MINTIE_Insertion_file.baseName}_output.txt" --force_overwrite --vcf --sift b --uniprot --check_existing --pubmed 
	
	if [ -e "*warnings.txt" ]; then
		rm *warnings.txt
	else
		echo "No warnings generated by VEP analysis"
	
	fi
	
	rm *.html	
	"""

}


	
grouped_modified_data = modified_data.collect()


//Process 3: This runs R analysis for variants with a database entry

process Run_R_Analysis {
	tag "Step 3: Analyzing data in R"
 	
	memory '16 GB'
	
	input:
	file VEP_Files from grouped_modified_data

	output:
	file 'results_summary.pdf' into known_summary_output
	
	publishDir params.outputDir, mode: 'copy', saveAs: { filename ->
	if (filename == 'results_summary.pdf') return filename
	else return null
	
	}
		
	"""
	export R_ENVIRON_USER='/stornext/Bioinf/data/lab_davidson/robson.b/Project/Pipeline/AutomatedITD/'
	chmod +x /stornext/Bioinf/data/lab_davidson/robson.b/Project/Pipeline/AutomatedITD/2_RScript.sh
	export R_LIBS_USER='/stornext/Bioinf/data/lab_davidson/robson.b/Project/Pipeline/AutomatedITD/renv/library/R-4.2/x86_64-pc-linux-gnu'
	export RENV_PATHS_CACHE='/stornext/Bioinf/data/lab_davidson/robson.b/Project/Pipeline/AutomatedITD'
	/stornext/Bioinf/data/lab_davidson/robson.b/Project/Pipeline/AutomatedITD/2_RScript.sh {VEP_Files}	
	
	"""

	
}
	
known_summary_output.view().println()


